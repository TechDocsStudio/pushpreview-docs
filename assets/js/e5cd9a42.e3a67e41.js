"use strict";(self.webpackChunkpushpreview=self.webpackChunkpushpreview||[]).push([[159],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(n),b=i,f=p["".concat(s,".").concat(b)]||p[b]||h[b]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=b;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[p]="string"==typeof e?e:i,a[1]=u;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},4990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_label:"GitHub"},a="Pull request previews for GitHub",u={unversionedId:"integrations/github",id:"integrations/github",title:"Pull request previews for GitHub",description:"Integrating PushPreview with GitHub empowers efficient collaboration and code quality through automated preview generation directly within your workflow. This documentation details the installation, authentication, and configuration specifics of PushPreview integration with GitHub.",source:"@site/docs/integrations/github.mdx",sourceDirName:"integrations",slug:"/integrations/github",permalink:"/integrations/github",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"GitHub"},sidebar:"tutorialSidebar",previous:{title:"Integrations",permalink:"/category/integrations"},next:{title:"Support",permalink:"/support"}},s={},l=[{value:"Quickstart",id:"quickstart",level:2},{value:"Authentication",id:"authentication",level:2},{value:"GitHub Action",id:"github-action",level:2}],c={toc:l},p="wrapper";function h(e){let{components:t,...o}=e;return(0,i.kt)(p,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pull-request-previews-for-github"},"Pull request previews for GitHub"),(0,i.kt)("p",null,"Integrating PushPreview with GitHub empowers efficient collaboration and code quality through automated preview generation directly within your workflow. This documentation details the installation, authentication, and configuration specifics of PushPreview integration with GitHub."),(0,i.kt)("h2",{id:"quickstart"},"Quickstart"),(0,i.kt)("p",null,"Enable pull request previews on GitHub with PushPreview by following the ",(0,i.kt)("a",{parentName:"p",href:"/"},"Quickstart"),". "),(0,i.kt)("p",null,"This step-by-step guide explains how to integrate automated preview generation into your GitHub workflow, streamlining review processes for web projects and applications"),(0,i.kt)("h2",{id:"authentication"},"Authentication"),(0,i.kt)("p",null,"Previews generated through PushPreview are public by default. However, for added security or confidentiality, PushPreview offers private previews. For more information, see ",(0,i.kt)("a",{parentName:"p",href:"/configuration/private-previews"},"Private previews"),"."),(0,i.kt)("p",null,"When accessing a private preview, PushPreview prompts for a GitHub login to ensure secure access:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"GitHub enable",src:n(4659).Z,width:"2852",height:"1408"})),(0,i.kt)("p",null,"Only users with permission to see the repository can access the preview."),(0,i.kt)("p",null,"PushPreview uses OAuth 2.0 authentication to maintain a secure connection with GitHub."),(0,i.kt)("h2",{id:"github-action"},"GitHub Action"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/TechDocsStudio/pushpreview-action"},"TechDocsStudio/pushpreview-action")," facilitates the connection between GitHub and PushPreview, integrating it into your GitHub workflow."),(0,i.kt)("p",null,"Below is an example of how to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"push-preview-action")," in a workflow:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: PushPreview\non:\n  pull_request_target:\n    types:\n      - labeled\njobs:\n  preview:\n    runs-on: ubuntu-latest\n    if: github.event.label.name == 'preview'\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          ref: ${{ github.head_ref }}\n      - name: Comment\n        run: |\n          gh pr comment ${{ github.event.pull_request.number }} --repo ${{ github.repository }} --body \"\u2699\ufe0f Hang tight! PushPreview is currently building your preview. We'll share the URL as soon as it's ready.\"\n        env:\n          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n      - name: Set BASE_URL\n        run: echo \"BASE_URL=/github/${{ github.repository }}/${{ github.event.number }}/\" >> $GITHUB_ENV\n      - name: Build site\n        run: |\n          cd docs\n          yarn install --frozen-lockfile\n          yarn build\n      - name: Generate preview\n        uses: TechDocsStudio/pushpreview-action@1.0.6\n        with:\n          source-directory: ./docs/build\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n          pushpreview-token: ${{ secrets.PUSHPREVIEW_TOKEN }}\n")),(0,i.kt)("p",null,"For more information on customizing the workflow to your build process, refer to the ",(0,i.kt)("a",{parentName:"p",href:"/category/installation"},"Installation")," section for CMS-specific guides."))}h.isMDXComponent=!0},4659:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/auth-github-c683a2575138c3525b3d50efab9abc1c.png"}}]);